name: CI

on:
  push:
    branches: [ main ]   # Only build on pushes to main

permissions:
  contents: read
  packages: write

jobs:
  build-dev:
    runs-on: ubuntu-latest

    env:
        TZ: Europe/Stockholm

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install tooling (flake8 + pytest placeholder)
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest

      - name: Run flake8
        run: flake8 --config flake8.conf 

      # --- Placeholder tests step ---
      # Replace this with real tests later (and remove the `|| echo ...` so failures fail CI)
      - name: Run pytest (placeholder)
        run: |
          echo "TODO: add real tests"
          pytest -q || echo "No tests yet (placeholder step)"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute image name
        id: meta
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=ghcr.io/${OWNER_LC}/microbirding" >> $GITHUB_ENV

      - name: Build, tag and push image
        run: |
          # Get first changelog release header and extract the latest release version
          VERSION=$(grep -w "## " -m 1 CHANGELOG.md | sed -E 's/## \[([^]]+)\].*/\1/')
          echo "Building version: $VERSION"
          # Get the build datetime
          BUILD_DATETIME=$(date +"%Y-%m-%d %H:%M")
          echo "Build datetime: $BUILD_DATETIME"

          # Unreleased version is tagged with "unreleased" and Git sha
          if [[ "$VERSION" == "unreleased" ]]; then
            TAG_FIXED="${IMAGE_NAME}:unreleased-${{ github.sha }}"
            TAG_MOVING="${IMAGE_NAME}:unreleased"
            RELEASE_TAG="unreleased-${{ github.sha }}"
            echo "Tagging as Docker image with: $TAG_FIXED and $TAG_MOVING"
            docker build --pull -t "$TAG_FIXED" -t "$TAG_MOVING" --build-arg RELEASE_TAG="$RELEASE_TAG" --build-arg BUILD_DATETIME="$BUILD_DATETIME" .
            docker push "$TAG_FIXED"
            docker push "$TAG_MOVING"
          else  # Numbered version is tagged with version number and with "latest"
            TAG_FIXED="${IMAGE_NAME}:${VERSION}"
            TAG_MOVING="${IMAGE_NAME}:latest"
            RELEASE_TAG="${VERSION}"
            echo "Tagging as Docker image with: $TAG_FIXED and $TAG_MOVING"
            docker build --pull -t "$TAG_FIXED" -t "$TAG_MOVING" --build-arg RELEASE_TAG="$RELEASE_TAG" --build-arg BUILD_DATETIME="$BUILD_DATETIME" .
            docker push "$TAG_FIXED"
            docker push "$TAG_MOVING"
          fi
